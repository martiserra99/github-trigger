# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json
language: "en-US"
early_access: false
reviews:
  request_changes_workflow: true
  high_level_summary: true
  poem: true
  review_status: true
  collapse_walkthrough: false
  auto_review:
    enabled: true
    ignore_title_keywords:
      - "WIP"
      - "DO NOT MERGE"
    drafts: false
    base_branches:
      - "dev"
  path_instructions:
    # Good Practices
    - path: "src/v2/**/*"
      instructions: "Review that we are following the DRY (Don't Repeat Yourself) principle to avoid code duplication."
    - path: "src/v2/**/*"
      instructions: "Review that we are using modular architecture, where code is divided into modules with distinct functionality."
    - path: "src/v2/**/*"
      instructions: "Review that we are following the separation of concerns principle, where each part of the code has a distinct responsibility."
    - path: "src/v2/**/*"
      instructions: "Review that we are using encapsulation to hide the internal workings of our components and modules."
    - path: "src/v2/**/*"
      instructions: "Review that we are using meaningful variable and function names that clearly describe their purpose."
    - path: "src/v2/**/*"
      instructions: "Review that we are using constants instead of hardcoding values."
    - path: "src/v2/**/*"
      instructions: "Review that we are using error handling to manage exceptions."
    - path: "src/v2/**/*"
      instructions: "Review that we are using strict equality checks (=== and !==) instead of loose equality (== and !=)."
    - path: "src/v2/**/*"
      instructions: "Review that we are not using any deprecated or obsolete features of JavaScript or React."
    - path: "src/v2/**/*"
      instructions: "Review that we are using the latest features of ES6+ such as let/const, arrow functions, template literals, destructuring, spread/rest operators, etc."
    - path: "src/v2/**/*"
      instructions: "Review that we are using async/await for asynchronous operations instead of callbacks."
    - path: "src/v2/**/*"
      instructions: "Review that we are using functional components with hooks instead of class components in React."
    - path: "src/v2/**/*"
      instructions: "Review that we are using a consistent coding style and following the guidelines defined in our .eslintrc.cjs file."
    - path: "src/v2/**/*"
      instructions: "Review that we are using JSDoc syntax for comments to provide clear and comprehensive documentation."

    # Naming Conventions
    - path: "src/v2/**/*"
      instructions: "Review that all the files and folders are named using kebab case"
    - path: "src/v2/**/*"
      instructions: "Review that the constants are named using camel case"
    - path: "src/v2/**/*"
      instructions: "Review that the functions are named using camel case"
    - path: "src/v2/**/*"
      instructions: "Review that the components are named using pascal case"
    - path: "src/v2/**/*"
      instructions: "Review that the types and interfaces are named using pascal case"

    - path: "src/v2/**/*"
      instructions: "Review that we are following the separation of concerns principle so that we don't have mixed logic in the same place"
    - path: "src/v2/**/*"
      instructions: "Review that the code is modular so that we don't have a lot of logic in the same place"
    - path: "src/v2/**/*"
      instructions: "Review that the code contains the necessary comments so that it is clear what the code does"
    - path: "src/v2/**/*"
      instructions: "Review that the React components are defined as functions using the function keyword"
    - path: "src/v2/**/*"
      instructions: "If the React components have props, review that the type of the props is an interface named after the component and ending with Props."
    - path: "src/v2/**/*"
      instructions: "If we have a file ending with .stories.tsx, review that it is in the same folder as the corresponding component."
    - path: "src/v2/**/*"
      instructions: "If we have a file ending with .stories.tsx, review that it starts with the same name as the component file."
    - path: "src/v2/**/*"
      instructions: "If we have one storybook story, review that it has the same name as the component."
    - path: "src/v2/**/*"
      instructions: "Review that we always import from npm packages first and then from our own files."
    - path: "src/v2/**/*"
      instructions: "Review that we always import the icons from our icons folder and not from npm packages."
chat:
  auto_reply: true
